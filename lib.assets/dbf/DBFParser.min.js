class DBFParser{constructor(e){this.view=new DataView(e),this.buffer=e,this.fields=[],this.records=[]}parse(){return this._parseHeader(),this._parseFields(),this._parseRecords(),this.records}_parseHeader(){this.recordCount=this.view.getUint32(4,!0),this.headerLength=this.view.getUint16(8,!0),this.recordLength=this.view.getUint16(10,!0)}_parseFields(){let e=32;for(;13!==this.view.getUint8(e);){let t=new Uint8Array(this.buffer,e,11),s=new TextDecoder().decode(t).replace(/\0/g,"").trim(),i=String.fromCharCode(this.view.getUint8(e+11)),r=this.view.getUint8(e+16),h=this.view.getUint8(e+17);this.fields.push({name:s,type:i,length:r,decimalCount:h}),e+=32}}_parseRecords(){let e=new TextDecoder,t=this.headerLength;for(let s=0;s<this.recordCount;s++){let i=String.fromCharCode(this.view.getUint8(t));if("*"!==i){let r={},h=t+1;for(let n of this.fields){let l=new Uint8Array(this.buffer,h,n.length),a=e.decode(l).trim();r[n.name]=this._parseValue(a,n),h+=n.length}this.records.push(r)}t+=this.recordLength}}_parseValue(e,t){switch(t.type){case"N":case"F":return e?parseFloat(e):null;case"D":return 8===e.length?new Date(`${e.slice(0,4)}-${e.slice(4,6)}-${e.slice(6,8)}`):null;case"L":return/^[YyTt]$/.test(e);default:return e}}}