class Column{constructor(e,t="VARCHAR",l="",n=!1,i="",a=!1,s=!1,o=""){this.name=e,this.type=t,this.length=l,this.nullable=n,this.default=i,this.primaryKey=a,this.autoIncrement=s,this.values=o}toSQL(){let e="";if(this.hasValue(["ENUM","SET"]))e=`${this.name} ${this.type}(${this.values.split(",").map(e=>`'${e.trim()}'`).join(", ")})`;else if(this.hasRange(["NUMERIC","DECIMAL","DOUBLE","FLOAT"])){let t=this.values.split(",").map(e=>e.trim()),l=(t=t.filter(e=>Number.isInteger(parseFloat(e)))).join(", ");e=t.length<2?`${this.name} ${this.type}`:`${this.name} ${this.type}(${l})`}else e=this.hasLength(["VARCHAR","CHAR","VARBINARY","BINARY","TINYINT","SMALLINT","MEDIUMINT","INT","INTEGER","BIGINT","BIT"])?`${this.name} ${this.type}(${this.length})`:`${this.name} ${this.type}`;return this.primaryKey?e+=" NOT NULL PRIMARY KEY":e+=this.nullable?" NULL":" NOT NULL",this.autoIncrement&&(e+=" AUTO_INCREMENT"),this.hasDefault()&&(this.isTypeBoolean(this.type,this.length)?e+=` DEFAULT ${this.toBoolean(this.default)}`:["BIGINT","INT","MEDIUMINT","SMALLINT","TINYINT","NUMERIC","DECIMAL","DOUBLE","FLOAT"].includes(this.type)&&!isNaN(this.default)?e+=` DEFAULT ${this.default}`:e+=` DEFAULT '${this.default}'`),e}toBoolean(e){return -1!==e.toLowerCase().indexOf("false")?"FALSE":0!==parseInt(e)||"true"===e.toLowerCase()?"TRUE":"FALSE"}fixDefaultValue(e,t,l){let n=e;return this.isTypeBoolean(t,l)?n=0!==e&&"true"===e.toString().toLowerCase()?"true":"false":this.isNativeValue(e)?n=e:this.isTypeText(t)?n=`'${e.replace(/'/g,"\\'")}'`:this.isTypeInteger(t)?n=parseInt(e.replace(/[^\d]/g,""),10):this.isTypeFloat(t)&&(n=parseFloat(e.replace(/[^\d.]/g,""))),n}isTypeBoolean(e,t){return"boolean"===e.toLowerCase()||"bool"===e.toLowerCase()||"bit"===e.toLowerCase()||"tinyint"===e.toLowerCase()&&1==t}isNativeValue(e){return"true"===e.toLowerCase()||"false"===e.toLowerCase()||"null"===e.toLowerCase()}isTypeText(e){return["char","varchar","text","tinytext","mediumtext","longtext","enum","set"].includes(e.toLowerCase())}isTypeInteger(e){return["tinyint","smallint","mediumint","int","bigint","integer"].includes(e.toLowerCase())}isTypeFloat(e){return["float","double","decimal","numeric"].includes(e.toLowerCase())}isTypeDate(e){return["date","datetime","timestamp","time","year"].includes(e.toLowerCase())}isTypeBinary(e){return["blob","tinyblob","mediumblob","longblob"].includes(e.toLowerCase())}hasRange(e){return e.includes(this.type)&&this.values}hasValue(e){return e.includes(this.type)&&this.values}hasLength(e){return this.length&&e.includes(this.type)}hasDefault(){return this.default&&"null"!==this.default.toLowerCase()}}class Entity{constructor(e){this.name=e,this.columns=[]}addColumn(e){this.columns.push(e)}removeColumn(e){this.columns.splice(e,1)}toSQL(){let e=`CREATE TABLE IF NOT EXISTS ${this.name} (\r
`;return this.columns.forEach(t=>{e+=`	${t.toSQL()},\r
`}),e=e.slice(0,-3),e+="\r\n);\r\n\r\n"}}class EntityEditor{constructor(e,t={}){this.setting={defaultDataType:"VARCHAR",defaultDataLength:"48",primaryKeyDataType:"VARCHAR",primaryKeyDataLength:"40"},Object.assign(this.setting,t),this.selector=e,this.entities=[],this.currentEntityIndex=-1,this.mysqlDataTypes=["BIGINT","INT","MEDIUMINT","SMALLINT","TINYINT","NUMERIC","DECIMAL","DOUBLE","FLOAT","BIT","DATE","TIME","DATETIME","TIMESTAMP","YEAR","LONGTEXT","MEDIUMTEXT","TEXT","TINYTEXT","VARCHAR","CHAR","ENUM","SET","LONGBLOB","MEDIUMBLOB","BLOB","TINYBLOB","UUID","VARBINARY","BINARY","POLYGON","LINESTRING","POINT","GEOMETRY","JSON",],this.withLengthTypes=["VARCHAR","CHAR","VARBINARY","BINARY","TINYINT","SMALLINT","MEDIUMINT","INT","INTEGER","BIGINT","BIT"],this.withValueTypes=["ENUM","SET"],this.withRangeTypes=["NUMERIC","DECIMAL","DOUBLE","FLOAT"],this.defaultLength={BIGINT:20,INT:11,MEDIUMINT:8,SMALLINT:5,TINYINT:4},this.addDomListeners(),this.callbackLoadEntity=this.setting.callbackLoadEntity,this.callbackSaveEntity=this.setting.callbackSaveEntity,this.callbackLoadTemplate=this.setting.callbackLoadTemplate,this.callbackSaveTemplate=this.setting.callbackSaveTemplate,this.defaultDataType=this.setting.defaultDataType+"",this.defaultDataLength=this.setting.defaultDataLength+"",this.primaryKeyDataType=this.setting.primaryKeyDataType+"",this.primaryKeyDataLength=this.setting.primaryKeyDataLength+"","function"==typeof this.callbackLoadEntity&&this.callbackLoadEntity(),"function"==typeof this.callbackLoadTemplate&&this.callbackLoadTemplate(),this.template={columns:[]}}addDomListeners(){document.querySelector(this.selector+" .check-all-entity").addEventListener("change",e=>{let t=e.target.checked,l=document.querySelectorAll(this.selector+" .selected-entity");l&&l.forEach((e,l)=>{e.checked=t}),this.exportToSQL()}),document.querySelector(this.selector+" .table-list").addEventListener("change",e=>{e.target.classList.contains("selected-entity")&&this.exportToSQL()});let e=this;document.addEventListener("change",function(t){if(t.target.classList.contains("column-primary-key")){let l=t.target.checked;if(l){let n=t.target.closest("tr");n.querySelector(".column-type").value=e.primaryKeyDataType,e.updateColumnLengthInput(n.querySelector(".column-type")),n.querySelector(".column-length").value=e.primaryKeyDataLength}}}),document.querySelector(this.selector+" .import-file-json").addEventListener("change",function(){let e=this.files[0];e?editor.importJSON(e,function(e){let t=document.querySelector('meta[name="application-id"]').getAttribute("content"),l=document.querySelector('meta[name="database-name"]').getAttribute("content"),n=document.querySelector('meta[name="database-schema"]').getAttribute("content");sendEntityToServer(t,document.querySelector('meta[name="database-type"]').getAttribute("content"),l,n,e)}):console.log("Please select a JSON file first.")}),document.querySelector(this.selector+" .import-file-sql").addEventListener("change",function(){let e=this.files[0];e?editor.importSQLFile(e,function(e){let t=document.querySelector('meta[name="application-id"]').getAttribute("content"),l=document.querySelector('meta[name="database-name"]').getAttribute("content"),n=document.querySelector('meta[name="database-schema"]').getAttribute("content");sendEntityToServer(t,document.querySelector('meta[name="database-type"]').getAttribute("content"),l,n,e)}):console.log("Please select a JSON file first.")})}showEditor(e=-1){if(e>=0){this.currentEntityIndex=e;let t=this.entities[e];document.querySelector(this.selector+" .entity-name").value=t.name,document.querySelector(this.selector+" .entity-columns-table-body").innerHTML="",t.columns.forEach(e=>this.addColumnToTable(e))}else{this.currentEntityIndex=-1;let l="new_table";for(let n in this.entities){let i=!1;for(let a in this.entities)(l=`new_table_${parseInt(n)+2}`).toLowerCase()==this.entities[a].name.toLowerCase()&&(i=!0);if(!i)break}document.querySelector(this.selector+" .entity-name").value=l,document.querySelector(this.selector+" .entity-columns-table-body").innerHTML=""}document.querySelector(this.selector+" .button-container").style.display="none",document.querySelector(this.selector+" .entity-container").style.display="block",document.querySelector(this.selector+" .template-container").style.display="none",document.querySelector(this.selector+" .editor-form").style.display="block",-1==e&&document.querySelector(this.selector+" .entity-name").select()}addColumnToTable(e,t=!1){let l=document.querySelector(this.selector+" .entity-columns-table-body"),n=document.createElement("tr"),i=null==e.length?"":e.length.replace(/\D/g,""),a=null==e.default?"":e.default,s=e.type.split("(")[0].trim();n.innerHTML=`
            <td class="column-action">
                <button onclick="editor.removeColumn(this)" class="icon-delete"></button>
                <button onclick="editor.moveUp(this)" class="icon-move-up"></button>
                <button onclick="editor.moveDown(this)" class="icon-move-down"></button>    
            </td>
            <td><input type="text" class="column-name" value="${e.name}" placeholder="Column Name"></td>
            <td>
                <select class="column-type" onchange="editor.updateColumnLengthInput(this)">
                    ${this.mysqlDataTypes.map(e=>`<option value="${e}" ${e===s?"selected":""}>${e}</option>`).join("")}
                </select>
            </td>
            <td><input type="text" class="column-length" value="${i}" placeholder="Length" style="display: ${this.withLengthTypes.includes(s)?"inline":"none"};"></td>
            <td><input type="text" class="column-enum" value="${e.values}" placeholder="Values (comma separated)" style="display: ${this.withValueTypes.includes(s)||this.withRangeTypes.includes(s)?"inline":"none"};"></td>
            <td><input type="text" class="column-default" value="${a}" placeholder="Default Value"></td>
            <td class="column-nl"><input type="checkbox" class="column-nullable" ${e.nullable?"checked":""}></td>
            <td class="column-pk"><input type="checkbox" class="column-primary-key" ${e.primaryKey?"checked":""}></td>
            <td class="column-ai"><input type="checkbox" class="column-autoIncrement" ${e.autoIncrement?"checked":""}></td>
        `,l.appendChild(n),t&&n.querySelector(".column-name").select()}addColumn(e=!1){let t=document.querySelector(this.selector+" .entity-name").value,l=document.querySelectorAll(this.selector+" .column-name").length,n=0==l?`${t}_id`:`${t}_col${l<=0?"":l+1}`,i=new Column(n,this.defaultDataType,this.defaultDataLength);this.addColumnToTable(i,e);let a=document.querySelector(this.selector+" .entity-container .table-container");a.scrollTop=a.scrollHeight}saveEntity(){let e=document.querySelector(this.selector+" .entity-name").value,t=[],l=document.querySelectorAll(this.selector+" #table-entity-editor .column-name"),n=document.querySelectorAll(this.selector+" #table-entity-editor .column-type"),i=document.querySelectorAll(this.selector+" #table-entity-editor .column-nullable"),a=document.querySelectorAll(this.selector+" #table-entity-editor .column-default"),s=document.querySelectorAll(this.selector+" #table-entity-editor .column-primary-key"),o=document.querySelectorAll(this.selector+" #table-entity-editor .column-autoIncrement"),r=document.querySelectorAll(this.selector+" #table-entity-editor .column-length"),c=document.querySelectorAll(this.selector+" #table-entity-editor .column-enum");for(let u=0;u<l.length;u++){let h=new Column(l[u].value,n[u].value,r[u].value||null,i[u].checked,a[u].value||null,s[u].checked,o[u].checked,c[u].value||null);t.push(h)}if(this.currentEntityIndex>=0)this.entities[this.currentEntityIndex].name=e,this.entities[this.currentEntityIndex].columns=t;else{let d=new Entity(e);t.forEach(e=>d.addColumn(e)),this.entities.push(d)}this.renderEntities(),this.cancelEdit(),this.exportToSQL(),"function"==typeof this.callbackSaveEntity&&this.callbackSaveEntity(this.entities)}showEditorTemplate(){this.currentEntityIndex=-2,document.querySelector(this.selector+" .template-columns-table-body").innerHTML="",this.template.columns.forEach(e=>this.addColumnToTemplate(e)),document.querySelector(this.selector+" .button-container").style.display="none",document.querySelector(this.selector+" .entity-container").style.display="none",document.querySelector(this.selector+" .template-container").style.display="block",document.querySelector(this.selector+" .editor-form").style.display="block"}addColumnTemplate(e){this.addColumnToTemplate({name:"",type:"VARCHAR",length:"50",nullable:!0,default:null,values:""},e);let t=document.querySelector(this.selector+" .template-container .table-container");t.scrollTop=t.scrollHeight}addColumnToTemplate(e,t){let l=document.querySelector(this.selector+" .template-columns-table-body"),n=document.createElement("tr"),i=null==e.length?"":e.length.replace(/\D/g,""),a=null==e.default?"":e.default,s=e.type.split("(")[0].trim();n.innerHTML=`
            <td class="column-action">
                <button onclick="editor.removeColumn(this)" class="icon-delete"></button>
                <button onclick="editor.moveUp(this)" class="icon-move-up"></button>
                <button onclick="editor.moveDown(this)" class="icon-move-down"></button>    
            </td>
            <td><input type="text" class="column-name" value="${e.name}" placeholder="Column Name"></td>
            <td>
                <select class="column-type" onchange="editor.updateColumnLengthInput(this)">
                    ${this.mysqlDataTypes.map(e=>`<option value="${e}" ${e===s?"selected":""}>${e}</option>`).join("")}
                </select>
            </td>
            <td><input type="text" class="column-length" value="${i}" placeholder="Length" style="display: ${this.withLengthTypes.includes(s)?"inline":"none"};"></td>
            <td><input type="text" class="column-enum" value="${e.values}" placeholder="Values (comma separated)" style="display: ${this.withValueTypes.includes(s)||this.withRangeTypes.includes(s)?"inline":"none"};"></td>
            <td><input type="text" class="column-default" value="${a}" placeholder="Default Value"></td>
            <td class="column-nl"><input type="checkbox" class="column-nullable" ${e.nullable?"checked":""}></td>
        `,l.appendChild(n),t&&n.querySelector(".column-name").select()}saveTemplate(){let e=[],t=document.querySelectorAll(this.selector+" #table-template-editor .column-name"),l=document.querySelectorAll(this.selector+" #table-template-editor .column-type"),n=document.querySelectorAll(this.selector+" #table-template-editor .column-nullable"),i=document.querySelectorAll(this.selector+" #table-template-editor .column-default"),a=document.querySelectorAll(this.selector+" #table-template-editor .column-length"),s=document.querySelectorAll(this.selector+" #table-template-editor .column-enum");for(let o=0;o<t.length;o++){let r=new Column(t[o].value,l[o].value,a[o].value||null,n[o].checked,i[o].value||null,s[o].value||null);e.push(r)}this.template.columns=e,document.querySelector(this.selector+" .entity-container").style.display="block",document.querySelector(this.selector+" .template-container").style.display="none","function"==typeof this.callbackSaveTemplate&&this.callbackSaveTemplate(this.template)}cancelEditTemplate(){document.querySelector(this.selector+" .entity-container").style.display="block",document.querySelector(this.selector+" .template-container").style.display="none"}addColumnFromTemplate(){let e=[],t=document.querySelectorAll(this.selector+" #table-entity-editor .column-name");for(let l of t)e.push(l.value);this.template.columns.forEach(t=>{e.includes(t.name)||this.addColumnToTable(t,focus)})}removeColumn(e){let t=e.closest("tr");t.remove()}moveUp(e){let t=e.closest("tr"),l=t.closest("tbody"),n=t.previousElementSibling;n&&l.insertBefore(t,n)}moveDown(e){let t=e.closest("tr"),l=t.closest("tbody"),n=t.nextElementSibling;n&&l.insertBefore(n,t)}createEntitiesFromJSON(e){let t=[];return e.forEach(e=>{let l=new Entity(e.name);e.columns.forEach(e=>{let t=new Column(e.name,e.type,e.length,e.nullable,e.default,e.primaryKey,e.autoIncrement,"null"!==e.values?e.values:"");l.addColumn(t)}),t.push(l)}),t}createTemplateFromJSON(e){let t=[];return e.columns.forEach(e=>{let l=new Column(e.name,e.type,e.length,e.nullable,e.default,"null"!==e.values?e.values:"");t.push(l)}),{columns:t}}createEntitiesFromSQL(e){let t=[];return e.forEach(e=>{let l=new Entity(e.tableName);e.columns.forEach(e=>{let t=new Column(e.Field,e.Type,e.Length,e.Nullable,e.Default,e.Key,e.AutoIncrement,null!=e.EnumValues&&"object"==typeof e.EnumValues?e.EnumValues.join(", "):null);l.addColumn(t)}),t.push(l)}),t}renderEntities(){let e=document.querySelector(this.selector+" .entities-container"),t=[],l=document.querySelectorAll(this.selector+" .selected-entity:checked");l&&l.forEach(e=>{t.push(e.getAttribute("data-name"))});let n=document.querySelector(this.selector+" .table-list"),i=document.querySelector(this.selector+" .draw-relationship").checked;n.innerHTML="",this.entities.forEach((e,t)=>{let l=document.createElement("li");l.innerHTML=`
            <label><input type="checkbox" class="selected-entity" data-name="${e.name}" value="${t}" />${e.name}</label>
            `,n.appendChild(l)}),t.forEach(e=>{let t=document.querySelector(`input[data-name="${e}"]`);t&&(t.checked=!0)});let a=e.querySelector(".erd-svg").parentNode.parentNode.offsetWidth;0==a&&(a=resizablePanels.getLeftPanelWidth()),renderer.createERD(editor.getData(),a-40,i)}moveEntityUp(e){if(editor.cancelEdit(),e<this.entities.length-1){let t=this.entities[e];this.entities[e]=this.entities[e+1],this.entities[e+1]=t,this.renderEntities(),this.exportToSQL(),"function"==typeof this.callbackSaveEntity&&this.callbackSaveEntity(this.entities)}}moveEntityDown(e){if(editor.cancelEdit(),e>0){let t=this.entities[e];this.entities[e]=this.entities[e-1],this.entities[e-1]=t,this.renderEntities(),this.exportToSQL(),"function"==typeof this.callbackSaveEntity&&this.callbackSaveEntity(this.entities)}}sortEntities(){this.entities.sort((e,t)=>e.name>t.name?1:e.name<t.name?-1:0),this.renderEntities(),this.exportToSQL(),"function"==typeof this.callbackSaveEntity&&this.callbackSaveEntity(this.entities)}editEntity(e){this.currentEntityIndex=e,this.showEditor(e)}deleteEntity(e){this.entities.splice(e,1),this.renderEntities(),this.exportToSQL(),"function"==typeof this.callbackSaveEntity&&this.callbackSaveEntity(this.entities)}cancelEdit(){document.querySelector(this.selector+" .editor-form").style.display="none",document.querySelector(this.selector+" .button-container").style.display="block"}updateColumnLengthInput(e){let t=e.closest("tr"),l=e.value,n=t.querySelector(".column-length"),i=t.querySelector(".column-enum");if(this.withLengthTypes.includes(l)?n.style.display="inline":n.style.display="none",this.withValueTypes.includes(l)||this.withRangeTypes.includes(l)?i.style.display="inline":i.style.display="none",void 0!==this.defaultLength[l]){let a=this.defaultLength[l];n.value=a}}exportToSQL(){let e=[],t=document.querySelectorAll(this.selector+" .selected-entity:checked");t.forEach((t,l)=>{let n=parseInt(t.value),i=this.entities[n];i&&e.push(i.toSQL())}),document.querySelector(this.selector+" .query-generated").value=e.join("\r\n")}exportJSON(e){let t=`${e.databaseName}-${e.databaseSchema}`,l=new Date,n=l.toISOString().replace(/[-T:\.Z]/g,"_");n.endsWith("_")&&(n=n.slice(0,-1));let i=`${t}_${n}.json`,a=JSON.stringify(e),s=new Blob([a],{type:"application/json"}),o=URL.createObjectURL(s),r=document.createElement("a");r.href=o,r.download=i,document.body.appendChild(r),r.click(),document.body.removeChild(r),URL.revokeObjectURL(o)}downloadSQL(){let e=document.querySelector('meta[name="application-id"]').getAttribute("content"),t=document.querySelector('meta[name="database-name"]').getAttribute("content"),l=document.querySelector('meta[name="database-schema"]').getAttribute("content"),n=document.querySelector('meta[name="database-type"]').getAttribute("content"),i={applicationId:e,databaseType:n,databaseName:t,databaseSchema:l},a=`${i.databaseName}-${i.databaseSchema}`,s=new Date,o=s.toISOString().replace(/[-T:\.Z]/g,"_");o.endsWith("_")&&(o=o.slice(0,-1));let r=`${a}_${o}.sql`,c=new Blob([document.querySelector(this.selector+" .query-generated").value],{type:"text/plain"}),u=URL.createObjectURL(c),h=document.createElement("a");h.href=u,h.download=r,document.body.appendChild(h),h.click(),document.body.removeChild(h),URL.revokeObjectURL(u)}importJSON(e,t){let l=this,n=new FileReader;n.onload=function(e){let n=e.target.result;try{let i=JSON.parse(n);l.entities=editor.createEntitiesFromJSON(i.entities),l.renderEntities(),"function"==typeof t&&t(l.entities)}catch(a){console.log("Error parsing JSON: "+a.message)}},n.readAsText(e)}importSQLFile(e,t){let l=this,n=new FileReader;n.onload=function(e){let n=e.target.result;try{n=new SQLConverter().translate(n,"mysql").split("`").join("");let i=new TableParser(n);l.entities=editor.createEntitiesFromSQL(i.tableInfo),l.renderEntities(),"function"==typeof t&&t(l.entities)}catch(a){console.log("Error parsing JSON: "+a.message)}},n.readAsText(e)}uploadEntities(){document.querySelector(this.selector+" .import-file-json").click()}importSQL(){document.querySelector(this.selector+" .import-file-sql").click()}downloadEntities(){let e=document.querySelector('meta[name="application-id"]').getAttribute("content"),t=document.querySelector('meta[name="database-name"]').getAttribute("content"),l=document.querySelector('meta[name="database-schema"]').getAttribute("content"),n=document.querySelector('meta[name="database-type"]').getAttribute("content"),i={applicationId:e,databaseType:n,databaseName:t,databaseSchema:l,entities:this.entities};this.exportJSON(i)}getData(){return{entities:this.entities}}}