class Entity{constructor(t,e){this.index=e,this.name=t,this.columns=[],this.data=[],this.description="",this.creationDate=null,this.modificationDate=null,this.creator=null,this.modifier=null}addColumn(t){this.columns.push(t)}removeColumn(t){this.columns.splice(t,1)}setData(t){this.data=t||[]}appendData(t){if(!t||0===t.length)return 0;let e=this.getPrimaryKeyColumns();if(0===e.length)return this.data.push(...t),t.length;let r=new Set;this.data.forEach(t=>{let n=e.map(e=>t[e]).join("__");r.add(n)});let n=0;return t.forEach(t=>{let l=e.map(e=>t[e]).join("__");!r.has(l)&&(this.data.push(t),r.add(l),n++)}),n}getData(){return this.data}countPrimaryKey(){return this.columns.filter(t=>t.primaryKey).length}getPrimaryKeyColumns(){return this.columns.filter(t=>t.primaryKey).map(t=>t.name)}getPrimaryKeyColumnsAsString(t="mysql"){let e=this.getPrimaryKeyColumns();return"mysql"===t?e.map(t=>`\`${t}\``).join(", "):e.join(", ")}toSQL(t="mysql"){let e=this.countPrimaryKey()>1,r=[],n=`CREATE TABLE IF NOT EXISTS ${this.name} (\r
`;return this.columns.forEach(n=>{r.push(`	${n.toSQL(t,e)}`)}),e&&r.push(`	PRIMARY KEY(${this.getPrimaryKeyColumnsAsString(t)})`),n+=r.join(",\r\n"),n+="\r\n);\r\n\r\n"}toSQLInsert(t="mysql",e=100){if(!this.data||0===this.data.length)return"";let r=this.columns.map(t=>t.name),n=[];for(let l=0;l<this.data.length;l+=e){let s=this.data.slice(l,l+e),a=s.map(e=>"("+r.map(r=>{let n=this.columns.find(t=>t.name===r),l=!!n&&n.nullable;return this.formatValue(e[r],n,t,l)}).join(", ")+")"),i=`INSERT INTO ${this.name} (${r.join(", ")}) VALUES
${a.join(",\n")};\r
`;n.push(i)}return n.join("\n")}createInsert(t,e){let r=e.join(", "),n=e.map(e=>{let r=this.columns.find(t=>t.name===e),n=!r||r.nullable;return this.formatValue(t[e],r,"mysql",n)}).join(", ");return`INSERT INTO ${this.name} (${r}) VALUES (${n});`}formatValue(t,e,r="mysql",n=!0){let l=e.type.toLowerCase(),s=e.length,a=e.isTypeText(l),i=e.isTypeInteger(l),o=e.isTypeFloat(l),u=e.isTypeBoolean(l,s),m=null==t||"string"==typeof t&&""===t.trim()||!a&&"null"===String(t).toLowerCase();return m?n?"null":void 0!==e.default&&null!==e.default?this.formatValue(e.default,e,r,!0):u?this.formatBoolean(t,r,!1,e.default):i||o?"0":"''":u?this.formatBoolean(t,r,n,e.default):i||o?t.toString():this.quoteString(t,r)}formatBoolean(t,e="mysql",r=!0,n=null){let l=null==t||"string"==typeof t&&""===t.trim()||"string"==typeof t&&"null"===t.trim().toLowerCase();if(l)return r?"null":null!=n?this.formatBoolean(n,e,!1):"postgresql"===e.toLowerCase()?"false":"0";let s=String(t).toLowerCase().trim(),a="true"===s||"1"===s||"yes"===s||"on"===s;return"postgresql"===e.toLowerCase()?a?"true":"false":a?"1":"0"}quoteString(t,e="mysql"){let r=String(t);switch(r=r.replace(/'/g,"''"),e.toLowerCase()){case"mysql":default:r=r.replace(/\\/g,"\\\\");break;case"postgresql":return`E'${r=r.replace(/\\/g,"\\\\")}'`;case"sqlite":case"sqlserver":}return`'${r}'`}}