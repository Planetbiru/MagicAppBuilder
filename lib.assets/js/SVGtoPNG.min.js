async function convertSvgToPng(t){return new Promise(e=>{let r=t.cloneNode(!0);r.setAttribute("xmlns","http://www.w3.org/2000/svg");let i=document.createElementNS("http://www.w3.org/2000/svg","style");i.textContent="svg,text{font-family: Arial, sans-serif;font-size: 11px;}";let n=r.querySelector("defs");n||(n=document.createElementNS("http://www.w3.org/2000/svg","defs"),r.prepend(n)),n.appendChild(i),requestAnimationFrame(()=>{try{let t=r.querySelector("g, path, rect, circle, ellipse, line, polygon, polyline, text")||r;if(r.hasAttribute("width")&&r.hasAttribute("height")||"function"!=typeof t.getBBox)r.hasAttribute("width")&&r.hasAttribute("height")||(r.setAttribute("width",r.getAttribute("width")||"800"),r.setAttribute("height",r.getAttribute("height")||"600"));else try{let i=t.getBBox(),n=Math.ceil(i.width||800),g=Math.ceil(i.height||600);r.setAttribute("width",n),r.setAttribute("height",g)}catch(h){console.warn("⚠️ getBBox() failed on detached SVG element, using fallback dimensions.",h),r.setAttribute("width","800"),r.setAttribute("height","600")}let o=new XMLSerializer,s=o.serializeToString(r);s.match(/^<svg[^>]+xmlns="http:\/\/www\.w3\.org\/2000\/svg"/)||(s=s.replace(/^<svg/,'<svg xmlns="http://www.w3.org/2000/svg"'));let l=new Blob([s],{type:"image/svg+xml;charset=utf-8"}),a=URL.createObjectURL(l),w=new Image;w.onload=()=>{let t=document.createElement("canvas");t.width=w.width,t.height=w.height;let r=t.getContext("2d");r.drawImage(w,0,0),URL.revokeObjectURL(a),e(t.toDataURL("image/png"))},w.onerror=t=>{console.error("❌ Failed to load SVG image for PNG conversion",t),console.debug("\uD83D\uDD0D SVG string that failed:",s),URL.revokeObjectURL(a),e("")},w.src=a}catch(c){console.error("❌ Error during SVG → PNG conversion:",c),e("")}})})}