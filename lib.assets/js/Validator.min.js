class EnumEditor{constructor(e){this.parent=e,this.itemsContainer=document.createElement("div"),this.outputContainer=this.parent.closest(".modal").querySelector('[data-prop="allowedValues"]'),this.outputContainer.value="";let t=document.createElement("button");t.className="btn btn-primary mt-2",t.innerHTML='<i class="fa fa-plus"></i> Add Item',t.type="button",t.onclick=()=>this.addItem(),this.parent.appendChild(this.itemsContainer),this.parent.appendChild(t),this.addItem()}sanitize(e){return e.replace(/["']/g,"")}addItem(e=""){let t=document.createElement("div");t.className="enum-item input-group";let i=document.createElement("table");i.className="table table-borderless table-enum";let a=document.createElement("tbody"),l=document.createElement("tr"),s=document.createElement("td"),n=document.createElement("td");n.setAttribute("width","30");let r=document.createElement("input");r.type="text",r.className="form-control",r.value=this.sanitize(e),r.oninput=()=>this.updateOutput();let d=document.createElement("button");d.className="btn btn-danger",d.type="button",d.innerHTML='<i class="fa fa-trash"></i>',d.onclick=()=>{this.itemsContainer.removeChild(t),this.updateOutput()},s.appendChild(r),n.appendChild(d),l.appendChild(s),l.appendChild(n),a.appendChild(l),i.appendChild(a),t.appendChild(i),this.itemsContainer.appendChild(t),this.updateOutput()}updateOutput(){let e=this.itemsContainer.querySelectorAll("input"),t=[];e.forEach(e=>{let i=this.sanitize(e.value.trim());i&&t.push(`"${i}"`)});let i=0===t.length?"":`{${t.join(", ")}}`;this.outputContainer.value=i}getValue(){return this.outputContainer.value}setItems(e=[]){if(this.itemsContainer.innerHTML="","string"==typeof e){let t=this.parseEnumString(e);this.setItems(t)}else"object"==typeof e&&e.length>0&&e.forEach(e=>this.addItem(e))}parseEnumString(e){return e&&"{}"!==e.trim()?e.replace(/^\{|\}$/g,"").split(",").map(e=>e.trim().replace(/^"(.*)"$/,"$1")):[]}}class ValidationBuilder{constructor(e,t,i,a){this.baseSelector=e,this.modalSelector=t,this.jsonOutputSelector=i,this.rowSelector=a,this.baseElement=document.querySelector(e),this.modalElement=document.querySelector(t),this.currentField=null,this.currentIndex=null,this.currentMaximumLength=null,this.validationsPerField={},this.propsContainer=this.modalElement.querySelector(".validation-props"),this.applyInsertCheckbox=this.modalElement.querySelector(".apply-insert"),this.applyUpdateCheckbox=this.modalElement.querySelector(".apply-update"),this.schema=this.initSchema(),this.bindFieldButtons(),this.initValidationSelector(),this.enumEditor=null}closeValidationModal(){return $(this.baseSelector).modal("hide"),this}closeAddValidationModal(){return new bootstrap.Modal(this.modalElement).hide(),$(this.modalSelector).modal("hide"),this}initSchema(){return{Required:["message"],NotEmpty:["message"],NotBlank:["message"],Min:["value","message"],Max:["value","message"],DecimalMin:["value","message"],DecimalMax:["value","message"],Range:["min","max","message"],Size:["min","max","message"],Length:["min","max","message"],Digits:["integer","fraction","message"],Positive:["message"],PositiveOrZero:["message"],Negative:["message"],NegativeOrZero:["message"],Pattern:["regexp","message"],Email:["message"],Url:["message"],Ip:["message"],DateFormat:["format","message"],Phone:["message"],NoHtml:["message"],Past:["message"],Future:["message"],PastOrPresent:["message"],FutureOrPresent:["message"],AssertTrue:["message"],Alpha:["message"],AlphaNumeric:["message"],StartsWith:["prefix","caseSensitive","message"],EndsWith:["suffix","caseSensitive","message"],Contains:["substring","caseSensitive","message"],BeforeDate:["date","message"],AfterDate:["date","message"],Enum:["allowedValues","caseSensitive","message"]}}bindFieldButtons(){let e=this;return $(document).on("click",e.rowSelector+" .validation-button",function(t){let i=$(this).closest(".validation-item")[0];e.currentField=i.dataset.fieldName,e.currentMaximumLength=i.dataset.maximumLength,$(".field-to-validate").text(i.dataset.fieldName),e.applyInsertCheckbox&&(e.applyInsertCheckbox.disabled=!0),e.applyUpdateCheckbox&&(e.applyUpdateCheckbox.disabled=!0),e.renderValidations(),$(e.baseSelector).modal("show")}),$(document).on("click",this.baseSelector+" .add-validation",function(t){e.currentIndex=null,e.modalElement.querySelector(".validation-type").value="",e.propsContainer.innerHTML="",e.applyInsertCheckbox&&(e.applyInsertCheckbox.disabled=!0,e.applyInsertCheckbox.checked=!1),e.applyUpdateCheckbox&&(e.applyUpdateCheckbox.disabled=!0,e.applyUpdateCheckbox.checked=!1),e.updateDropDown(),$(e.modalSelector).modal("show")}),$(document).on("click",this.baseSelector+" .add-validation-merged",function(t){let i=$(this)[0].closest(".validation-item");e.currentField=i.dataset.fieldName,e.currentIndex=null,e.currentMaximumLength=i.dataset.maximumLength,e.modalElement.querySelector(".validation-type").value="",e.propsContainer.innerHTML="",e.updateDropDown(),$(e.modalSelector).modal("show")}),this}updateDropDown(e){let t=this.validationsPerField[this.currentField],i=[];"undefined"!==t&&t&&t.forEach(e=>{i.push(e.type)});let a=this.modalElement.querySelector(".validation-type");return a.querySelectorAll("option").forEach(t=>{let a=t.getAttribute("value"),l=a!=e&&i.includes(a);t.disabled=l}),this}initValidationSelector(){let e=this.modalElement.querySelector(".validation-type");for(let t in this.schema){let i=document.createElement("option");i.value=t,i.textContent=t,e.appendChild(i)}return e.addEventListener("change",()=>this.renderPropsInputs()),this}isEnum(e,t){return"Enum"==e&&"allowedValues"==t}isCaseSensitive(e){return"caseSensitive"==e}renderPropsInputs(e={}){let t=this,i=this.modalElement.querySelector(".validation-type").value;return this.propsContainer.innerHTML="",(this.schema[i]||[]).forEach(a=>{let l=document.createElement("div");l.className="mb-2";let s=t.isEnum(i,a),n=t.isCaseSensitive(a);if(s?l.innerHTML=`<label class="form-label">${a}</label><div class="enum-editor"></div><input type="text" class="form-control" data-prop="${a}" placeholder="${a}" value="${e[a]||""}" readonly>`:n?l.innerHTML=`<label class="form-label">${a}</label><select class="form-control" data-prop="${a}">
                <option value="true"${"true"==e[a]||!0===e[a]?" selected":""}>true</option>
                <option value="false"${"false"==e[a]||!1===e[a]?" selected":""}>false</option>
                </select>
                `:l.innerHTML=`<label class="form-label">${a}</label><input type="text" class="form-control" data-prop="${a}" placeholder="${a}" value="${e[a]||""}">`,this.propsContainer.appendChild(l),s){t.enumEditor=new EnumEditor(l.querySelector(".enum-editor"));let r=e[a];void 0!==r&&r&&t.enumEditor.setItems(r)}}),this.applyInsertCheckbox&&(this.applyInsertCheckbox.disabled=!1,this.applyInsertCheckbox.checked=!0===e.applyInsert),this.applyUpdateCheckbox&&(this.applyUpdateCheckbox.disabled=!1,this.applyUpdateCheckbox.checked=!0===e.applyUpdate),this.autopopulateMinMax(i),this}autopopulateMinMax(e){("Size"==e||"Length"==e)&&this.currentMaximumLength&&(this.propsContainer.querySelector('input[data-prop="min"').value=0,this.propsContainer.querySelector('input[data-prop="max"').value=this.currentMaximumLength)}saveValidation(){let e=this.modalElement.querySelector(".validation-type").value;if(!e||!this.currentField)return;let t={};this.propsContainer.querySelectorAll("[data-prop]").forEach(e=>{let i=e.dataset.prop;void 0!==i&&i&&(t[i]=e.value)});let i={type:e,...t,applyInsert:this.applyInsertCheckbox.checked,applyUpdate:this.applyUpdateCheckbox.checked};this.validationsPerField[this.currentField]||(this.validationsPerField[this.currentField]=[]),null!==this.currentIndex?this.validationsPerField[this.currentField][this.currentIndex]=i:this.validationsPerField[this.currentField].push(i);let a=this.baseElement.querySelector(".field-validations-list"),l=this.validationsPerField[this.currentField]||[];return this.renderFieldValidations(a,this.currentField,l),$(this.modalSelector).modal("hide"),this}saveValidationToSelectedField(){let e=this.modalElement.querySelector(".validation-type").value;if(!e||!this.currentField)return;let t={};this.propsContainer.querySelectorAll("[data-prop]").forEach(e=>{let i=e.dataset.prop;void 0!==i&&i&&(t[i]=e.value)});let i={type:e,...t};return this.validationsPerField[this.currentField]||(this.validationsPerField[this.currentField]=[]),null!==this.currentIndex?this.validationsPerField[this.currentField][this.currentIndex]=i:this.validationsPerField[this.currentField].push(i),this.renderValidationsMerged(),$(this.modalSelector).modal("hide"),this}renderValidationsMerged(){let e=this,t=this.baseElement.querySelectorAll(".validation-item");t.forEach(t=>{let i=t.dataset.fieldName,a=this.validationsPerField[i]||[];e.renderFieldValidationsMerged(t.querySelector(".field-validations-list"),i,a)})}saveAllValidation(e){return validation=this.getValidation(e),this.markValidation()}markValidation(){let e=Object.keys(this.validationsPerField),t=document.querySelectorAll(this.rowSelector);return t.forEach(t=>{let i=t.dataset.fieldName;t.dataset.hasValidation=e.includes(i)?"true":"false"}),this}renderValidations(){let e=this.currentField,t=this.baseElement.querySelector(".field-validations-list"),i=this.validationsPerField[e]||[];return this.renderFieldValidations(t,e,i)}renderFieldValidations(e,t,i){return e.innerHTML="",(i||[]).forEach((i,a)=>{let l=Object.entries(i).filter(([e])=>"type"!==e&&"applyInsert"!==e&&"applyUpdate"!==e).map(([e,t])=>"allowedValues"===e&&"string"==typeof t&&t.startsWith("{")&&t.endsWith("}")?`${e}=${t}`:`${e}="${t}"`).join(", "),s="";s+='<div class="validation-targets">',s+='<div class="form-check form-check-inline">',s+=`<input class="form-check-input " type="checkbox" disabled ${i.applyInsert?"checked":""}>`,s+='<label class="form-check-label">Insert</label>',s+="</div>",s+='<div class="form-check form-check-inline">',s+=`<input class="form-check-input" type="checkbox" disabled ${i.applyUpdate?"checked":""}>`,s+='<label class="form-check-label">Update</label>',s+="</div>",s+="</div>";let n=document.createElement("div");n.className="field-validations d-flex justify-content-between align-items-center mb-2",n.innerHTML=`
            <div style="width: calc(100% - 90px)">
              <span>@${i.type}(${l})</span>
              ${s}
            </div>
            <div style="width: 90px; text-align: right;">
              <button type="button" class="btn btn-sm btn-primary me-1" onclick="validatorBuilder.editValidation('${t}', ${a})"><i class="fa-solid fa-pencil"></i></button>
              <button type="button" class="btn btn-sm btn-danger" onclick="validatorBuilder.deleteValidation('${t}', ${a})"><i class="fa-solid fa-trash-can"></i></button>
            </div>`,e.appendChild(n)}),document.querySelector(this.jsonOutputSelector).textContent=JSON.stringify(this.validationsPerField,null,2),this}renderFieldValidationsMerged(e,t,i){return e.innerHTML="",(i||[]).forEach((i,a)=>{let l=Object.entries(i).filter(([e])=>"type"!==e&&"applyInsert"!==e&&"applyUpdate"!==e).map(([e,t])=>"allowedValues"===e&&"string"==typeof t&&t.startsWith("{")&&t.endsWith("}")?`${e}=${t}`:`${e}="${t}"`).join(", "),s=document.createElement("div");s.className="field-validations d-flex justify-content-between align-items-center mb-2",s.innerHTML=`
                <div style="width: calc(100% - 90px)">
                <span>@${i.type}(${l})</span>
                
                </div>
                <div style="width: 90px; text-align: right;">
                <button type="button" class="btn btn-sm btn-primary me-1" onclick="valBuilder.editValidation('${t}', ${a})"><i class="fa-solid fa-pencil"></i></button>
                <button type="button" class="btn btn-sm btn-danger" onclick="valBuilder.deleteValidationMerged('${t}', ${a})"><i class="fa-solid fa-trash-can"></i></button>
                </div>`,e.appendChild(s)}),document.querySelector(this.jsonOutputSelector).value=JSON.stringify(this.validationsPerField,null,2),this}deleteValidation(e,t){return this.validationsPerField[e].splice(t,1),0===this.validationsPerField[e].length&&delete this.validationsPerField[e],this.renderValidations(),this}deleteValidationMerged(e,t){return this.validationsPerField[e].splice(t,1),0===this.validationsPerField[e].length&&delete this.validationsPerField[e],this.renderValidationsMerged(),this}editValidation(e,t,i){this.currentField=e,this.currentIndex=t,this.currentMaximumLength=i;let a=this.validationsPerField[e][t];this.modalElement.querySelector(".validation-type").value=a.type,this.renderPropsInputs(a),this.updateDropDown(a.type),$(this.modalSelector).modal("show")}getValidation(e){return e&&$(this.baseSelector).modal("hide"),this.validationsPerField}setValidation(e){return this.validationsPerField=e,this}}