class SQLConverter{constructor(){this.dbToSqlite={int:"INTEGER","tinyint(1)":"BOOLEAN",tinyint:"INTEGER",smallint:"INTEGER",mediumint:"INTEGER",bigint:"INTEGER",real:"REAL",float:"REAL",double:"REAL",decimal:"REAL",nvarchar:"NVARCHAR",varchar:"NVARCHAR","character varying":"NVARCHAR",char:"TEXT",tinytext:"TEXT",mediumtext:"TEXT",longtext:"TEXT",text:"TEXT",datetime:"DATETIME",timestamp:"DATETIME",date:"DATE",time:"TIME",year:"INTEGER",boolean:"INTEGER",json:"TEXT",jsonb:"TEXT",integer:"INTEGER",serial:"INTEGER",bigserial:"INTEGER","double precision":"REAL",timestamptz:"TEXT"},this.dbToMySQL={bigint:"BIGINT",mediumint:"MEDIUMINT",smallint:"SMALLINT",integer:"INT",real:"FLOAT",tinytext:"TINYTEXT",mediumtext:"MEDIUMTEXT",longtext:"LONGTEXT",text:"TEXT",nvarchar:"VARCHAR",varchar:"VARCHAR","character varying":"VARCHAR","tinyint(1)":"TINYINT(1)",tinyint:"TINYINT",boolean:"TINYINT(1)",int:"INT",datetime:"DATETIME",date:"DATE",timestamptz:"TIMESTAMP","timestamp with time zone":"TIMESTAMP","timestamp without time zone":"DATETIME",timestamp:"TIMESTAMPTZ",json:"JSON"},this.dbToPostgreSQL={bigint:"BIGINT",mediumint:"INTEGER",smallint:"INTEGER","tinyint(1)":"BOOLEAN",tinyint:"INTEGER",integer:"INTEGER",real:"REAL",longtext:"TEXT",mediumtext:"TEXT",smalltext:"TEXT",tinytext:"TEXT",text:"TEXT","character varying":"CHARACTER VARYING",nvarchar:"CHARACTER VARYING",varchar:"CHARACTER VARYING",char:"char",boolean:"BOOLEAN",datetime:"TIMESTAMP WITHOUT TIME ZONE",date:"DATE",timestamptz:"TIMESTAMP WITH TIME ZONE",timestamp:"TIMESTAMP WITH TIME ZONE",time:"TIME",json:"JSONB"}}replaceAll(e,t,r){let l=RegExp(t,"gi");return e.replace(l,r)}translate(e,t){let r=[],l=this.extractDropTableQueries(e,t);for(let i in l)r.push("-- DROP TABLE IF EXISTS "+l[i].table+";");e=this.replaceAll(e,"`",""),e=this.replaceAll(e," timestamp with time zone"," timestamptz"),e=this.replaceAll(e," timestamp without time zone"," timestamp"),e=this.replaceAll(e," character varying"," varchar"),e=this.replaceAll(e,' COLLATE pg_catalog."default"',""),e=this.replaceAll(e," TINYINT(1)"," boolean");let a=new TableParser;a.parseAll(e);let T=a.getResult(),s=[];for(let n in T){let o=this.convertQuery(T[n],t);s.push(o),s.push("")}return r.length>0&&r.push("\r\n\r\n"),r.join("\r\n")+s.join("\r\n")}convertQuery(e,t){return"sqlite"===t?this.toSqliteOut(e,t):"mysql"===t||"mariadb"===t?this.toMySQLOut(e,t):"pgsql"===t||"postgresql"===t?this.toPostgreSQLOut(e,t):void 0}toSqliteOut(e,t){let r={};for(let l in r.tableName=e.tableName,r.primaryKey=e.primaryKey,r.columns=[],e.columns){let i=Object.assign({},e.columns[l]);i.Type=this.toSqliteType(i.Type,i.Length),r.columns.push(i)}return this.toSqliteTable(r,t)}toMySQLOut(e,t){let r={};for(let l in r.tableName=e.tableName,r.primaryKey=e.primaryKey,r.columns=[],e.columns){let i=Object.assign({},e.columns[l]);i.Field=i.Field,i.Type=this.toMySQLType(i.Type,i.Length),r.columns.push(i)}return this.toMySQLTable(r,t)}toPostgreSQLOut(e,t){let r={};for(let l in r.tableName=e.tableName,r.primaryKey=e.primaryKey,r.columns=[],e.columns){let i=Object.assign({},e.columns[l]);i.Type=this.toPostgreSQLType(i.Type,i.Length),r.columns.push(i)}return this.toPostgreSQLTable(r,t)}toSqliteTable(e,t){return this.toTable(e,t)}toMySQLTable(e,t){return this.toTable(e,t)}toPostgreSQLTable(e,t){return this.toTable(e,t)}toTable(e,t){let r=e.tableName;-1!==r.indexOf(".")&&(r=r.split(".")[1]);let l=[];"mysql"===t||"mariadb"===t?r="`"+r+"`":("pgsql"===t||"postgresql"===t)&&(r='"'+r+'"'),l.push("CREATE TABLE IF NOT EXISTS "+r),l.push("(");let i=[];for(let a in e.columns){let T=e.columns[a].Field;("mysql"===t||"mariadb"===t)&&(T="`"+T+"`");let s=e.columns[a].Type,n=e.columns[a].Field===e.primaryKey,o="	"+T+" "+s;n?(o+=" PRIMARY KEY",o+=" NOT NULL",e.columns[a].Nullable=!1):e.columns[a].Nullable?o+=" NULL":o+=" NOT NULL";let E=e.columns[a].Default;n||""===E||null===E||(E=this.replaceAll(E,"::character varying",""),""!=(E=this.fixDefaultValue(E,t))&&null!=E&&("NULL"==E.toUpperCase()?o+=" DEFAULT NULL":"BOOLEAN"==s.toUpperCase()||"TINYINT(1)"==s.toUpperCase()?o+=" DEFAULT "+(-1!=E.indexOf("1")?"TRUE":"FALSE"):-1!=s.toUpperCase().indexOf("INT")?o+=" DEFAULT "+this.convertToInteger(E):-1!=s.toUpperCase().indexOf("FLOAT")||-1!=s.toUpperCase().indexOf("DOUBLE")||-1!=s.toUpperCase().indexOf("REAL")|-1!=s.toUpperCase().indexOf("DECIMAL")?o+=" DEFAULT "+this.convertToReal(E):o+=" DEFAULT "+E)),i.push(o)}return l.push(i.join(",\r\n")),l.push(");"),l.join("\r\n")}convertToInteger(e){let t=e.replace(/^'|'$/g,"");return""===t?0:parseInt(t,10)}convertToReal(e){let t=e.replace(/^'|'$/g,"");if(""===t)return 0;let r=parseFloat(t);return isNaN(r)?0:r}fixDefaultValue(e,t){return"sqlite"===t&&-1!==e.toLowerCase().indexOf("now(")&&(e=""),e}toSqliteType(e,t){if("tinyint"==e.toLowerCase()&&1==t)return"BOOLEAN";let r="TEXT";for(let l in this.dbToSqlite)if(this.dbToSqlite.hasOwnProperty(l)){let i=l.toString();if(e.toLowerCase().startsWith(i.toLowerCase())){r=this.dbToSqlite[i];break}}if(-1!=e.toUpperCase().indexOf("ENUM")){let{resultArray:a,maxLength:T}=this.parseEnumValue(t);r="NVARCHAR("+(T+2)+")"}else("NVARCHAR"===r||"INT"===r)&&t>0&&(r=r+"("+t+")");return r}toMySQLType(e,t){let r="TEXT";if("TINYINT"===e.toUpperCase()&&1==t)return"TINYINT(1)";if(("TINYINT"===e.toUpperCase()||"SMALLINT"===e.toUpperCase()||"MEDIUMINT"===e.toUpperCase()||"BIGINT"===e.toUpperCase()||"INTEGER"===e.toUpperCase()||"INT"===e.toUpperCase())&&t>0)return`${e}(${t})`;for(let l in this.dbToMySQL)if(this.dbToMySQL.hasOwnProperty(l)){let i=l.toString();if(e.toLowerCase().startsWith(i.toLowerCase())){r=this.dbToMySQL[i];break}}if(r=this.replaceAll(r,"TIMESTAMPTZ","TIMESTAMP"),-1!=e.toUpperCase().indexOf("ENUM")){let{resultArray:a,maxLength:T}=this.parseEnumValue(t);r="enum('"+a.join("','")+"')"}return"VARCHAR"===r&&t>0&&(r=r+"("+t+")"),r}toPostgreSQLType(e,t){let r="TEXT";for(let l in this.dbToPostgreSQL)if(this.dbToPostgreSQL.hasOwnProperty(l)){let i=l.toString();if(e.toLowerCase().startsWith(i.toLowerCase())){r=this.dbToPostgreSQL[i];break}}if(-1!=e.toUpperCase().indexOf("TINYINT")&&1==t)r="BOOLEAN";else if(-1!=e.toUpperCase().indexOf("ENUM")){let{resultArray:a,maxLength:T}=this.parseEnumValue(t);r="CHARACTER VARYING("+(T+2)+")"}else"CHARACTER VARYING"===r&&t>0&&(r=r+"("+t+")");return r}parseEnumValue(e){let t=/'([^']+)'/g,r,l=[];for(;null!==(r=t.exec(e));)l.push(r[1]);let i=l.reduce((e,t)=>t.length>e?t.length:e,0);return{resultArray:l,maxLength:i}}extractDropTableQueries(e,t){let r=e.replace(/`/g,""),l=/DROP TABLE IF EXISTS ([^\s]+)/gi,i,a=[];for(;null!==(i=l.exec(r));){let T=this.extractTableName(i[1]);"pgsql"===t?T='"'+T+'"':("mysql"===t||"mariadb"===t)&&(T="`"+T+"`"),a.push({table:T})}return a}extractTableName(e){return e.includes(".")?e.split(".")[1]:e}}