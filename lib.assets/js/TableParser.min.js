class TableParser{constructor(e){this.tableInfo=[],this.init(),e&&this.parseAll(e)}init(){this.typeList="TIMESTAMPTZ,TIMESTAMP,SERIAL4,BIGSERIAL,INT2,INT4,INT8,TINYINT,BIGINT,TEXT,NVARCHAR,VARCHAR,ENUM,SET,NUMERIC,DECIMAL,CHAR,REAL,FLOAT,INTEGER,INT,DATETIME,DATE,DOUBLE,BOOLEAN,BOOL".split(",")}inArray(e,t){return e.includes(t)}isPrimaryKey(e){let t=e.toUpperCase().replace(/\s+/g," ").trim();return t.includes("PRIMARY KEY")}isAutoIncrement(e){let t=e.toUpperCase().replace(/\s+/g," ").trim(),s=!1;return(s=t.includes("AUTO_INCREMENT"))||(s=t.includes("SERIAL")||t.includes("BIGSERIAL")||t.includes("NEXTVAL")),s}parseTable(e){e=e.split(";")[0];let t=/(\w+\s+key.*|\w+\s+bigserial|\w+\s+serial4|\w+\s+tinyint.*|\w+\s+bigint.*|\w+\s+text.*|\w+\s+nvarchar.*|\w+\s+varchar.*|\w+\s+char.*|\w+\s+real.*|\w+\s+float.*|\w+\s+integer.*|\w+\s+int.*|\w+\s+datetime.*|\w+\s+date.*|\w+\s+double.*|\w+\s+bigserial.*|\w+\s+serial.*|\w+\s+timestamp.*|\w+\s+timestamptz.*|\w+\s+boolean.*|\w+\s+bool.*|\w+\s+enum\s*\(.*\)|\w+\s+enum\s*\(.*\)|\w+\s+set\s*\(.*\)|\w+\s+decimal\s*\(.*\)|\w+\s+numeric\s*\(.*\))/gim,s=/(?<fname>\w+)\s+(?<ftype>\w+)(?<fattr>.*)/gi,i=/enum\s*\(([^)]+)\)/i,l=/set\s*\(([^)]+)\)/i,r=/not\s+null/i,a=/primary\s+key/i,n=/default\s+(.+)/i,u=/(PRIMARY|UNIQUE) KEY[a-zA-Z_0-9\s]+\(([a-zA-Z_0-9,\s]+)\)/gi,c=/(create\s+table\s+if\s+not\s+exists|create\s+table)\s(?<tb>.*)\s\(/gim.exec(e),p=c.groups.tb,m=[],o=null,A=[],I=[];for(;null!=(c=t.exec(e));){let h=c[0],w=h;s.lastIndex=0;let T=s.exec(h),g=T[0],E=T[2],y=E,d=!1,b=null,f=null;if(i.test(g)&&(f=(b=i.exec(g)[1]).split(",").map(e=>e.trim().replace(/['"]/g,""))),l.test(g)&&(f=(b=l.exec(g)[1]).split(",").map(e=>e.trim().replace(/['"]/g,""))),this.isValidType(E.toString())||this.isValidType(y.toString())){let N=T.groups.fattr.replace(",","").trim(),R=!r.test(N),L=N.replace(r,"");d=a.test(L)||this.isPrimaryKey(w);let x=this.isAutoIncrement(w),M=n.exec(L),$=null;M&&M.length>0?(M=M[1].trim()).toLowerCase().includes("comment")&&($=M.substring(M.indexOf("comment"))):M=null;let C=this.getLength(N),K=T.groups.fname.trim();d&&I.push(K),this.inArray(A,K)||(m.push({Field:K,Type:E.trim(),Length:C,Key:d,Nullable:R,Default:M,AutoIncrement:x,EnumValues:f}),A.push(K))}else if(this.isPrimaryKey(w)){let S=c[1],U=/\((.*)\)/,O=S.match(U);null==o&&(o=O?O[1]:null)}if(null!=o)for(let P in o=o.split("(").join("").split(")").join(""),m)m[P].Field==o&&(m[P].Key=!0);if(u.test(h)&&a.test(h)){let _=h.replace(h.match(a)[0],""),V=(_=_.replace("(","").replace(")","")).split(",").map(e=>e.trim());for(let B in m)this.inArray(V,m[B].Field)&&(m[B].Key=!0)}}return null==o&&(o=I[0]),{tableName:p,columns:m,primaryKey:o}}getLength(e){if(e.includes("(")&&e.includes(")")){let t=e.match(/\((.*)\)/);return t?t[1]:""}return""}isValidType(e){return this.typeList.includes(e.toUpperCase())}parseAll(e){let t=[],s,i=/(create\s+table\s+if\s+not\s+exists|create\s+table)\s(?<tb>.*)\s\(/gi;for(;null!=(s=i.exec(e));){let l=e.substring(s.index),r=this.parseTable(l);t.push(r)}this.tableInfo=t}getResult(){return this.tableInfo}}